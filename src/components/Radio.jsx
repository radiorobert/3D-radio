/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useSpring, animated } from "@react-spring/three";

const stationPos = { button_01: -0.3, button_02: 2, button_03: 5, button_04: 1 };

export function AnimatedButton({ id, idx, geometry, material, selected, setSelected, setStation, stationText }) {
  const { position } = useSpring({
    position: selected === id ? -0.5 : 0,
    config: { tension: 400, friction: 20 },
  });

  return (
    <animated.mesh
      position-y={position}
      onClick={() => {
        setSelected(id), setStation(idx);
      }}
      geometry={geometry}
      castShadow
      receiveShadow
      material={material}
      scale={0.394}
    />
  );
}

// TODO NEXT: animate the tuner
function AnimatedTuner({ id, geometry, material, selected }) {
  const tunerRef = useRef();
  const { position } = useSpring({
    position: stationPos[selected],
    from: { position: tunerRef.current?.position.x || 0 },
    config: { tension: 180, friction: 12 },
  });

  return (
    <animated.mesh ref={tunerRef} castShadow receiveShadow scale={0.394} position-x={position} geometry={geometry} material={material} />
  );
}

export default function Radio({ setStation, stationText, position, ...props }) {
  const { nodes, materials } = useGLTF("/radio.glb");
  const [hovered, hover] = useState(null);
  const [selected, setSelected] = useState(null);

  return (
    <group {...props} dispose={null}>
      <group scale={0.025} position={position}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Attena.geometry}
          material={materials["Paint - Enamel Glossy (Black)"]}
          scale={0.394}
        />
        <AnimatedButton
          id={"button_01"}
          idx={0}
          setStation={setStation}
          stationText={stationText}
          selected={selected}
          setSelected={setSelected}
          geometry={nodes.Button_01.geometry}
          material={materials["White Button"]}
        />
        <AnimatedButton
          id={"button_02"}
          idx={1}
          setStation={setStation}
          stationText={stationText}
          selected={selected}
          setSelected={setSelected}
          geometry={nodes.Button_02.geometry}
          material={materials["White Button"]}
        />
        <AnimatedButton
          id={"button_03"}
          idx={2}
          setStation={setStation}
          stationText={stationText}
          selected={selected}
          setSelected={setSelected}
          geometry={nodes.Button_03.geometry}
          material={materials["White Button"]}
        />
        <AnimatedButton
          id={"button_04"}
          idx={3}
          setStation={setStation}
          stationText={stationText}
          selected={selected}
          setSelected={setSelected}
          geometry={nodes.Button_04.geometry}
          material={materials["White Button"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Display.geometry}
          material={materials["Paint - Enamel Glossy (White)"]}
          scale={0.394}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Radio_Body.geometry}
          material={materials["Paint - Enamel Glossy (Blue)"]}
          scale={0.394}
        />
        <AnimatedTuner geometry={nodes.Tuner_Indicator.geometry} material={materials["Paint - Enamel Glossy (Red)"]} selected={selected} />
      </group>
    </group>
  );
}

useGLTF.preload("/radio.glb");
